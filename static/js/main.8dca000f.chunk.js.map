{"version":3,"sources":["serviceWorker.js","layout/Nav.js","layout/Header.js","meme/Dmeme.js","meme/Saved.js","meme/meme.js","login.js","index.js"],"names":["Boolean","window","location","hostname","match","Nav","className","onClick","this","props","set","style","fontSize","setsave","marginLeft","display","padding","name","providerData","uid","logout","Component","Header","Dmeme","state","index","index1","index2","img","next","setState","prev","textAlign","float","marginTop","length","width","id","src","url","dispatch","bind","Saved","images","obj","firebase","auth","onAuthStateChanged","user","database","ref","on","image","val","Object","values","map","a","fm","filter","b","indexOf","Meme","oldimg","allimg","text0","text1","text2","text3","text4","i","console","log","box_count","document","getElementsByTagName","value","onchange","e","target","color","onsub","template_id","boxes","box","axios","post","then","data","get","res","memes","catch","err","push","input","type","text","onChange","placeholder","margin","meme","save","saved","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","rootReducer","combineReducers","firebaseReducer","store","createStore","rrfProps","config","userProfile","Login","signup","email","password","confpass","login","signInWithEmailAndPassword","emailVerified","alert","message","signOut","sign","createUserWithEmailAndPassword","currentUser","sendEmailVerification","u","setmeme","show","getElementById","sethome","logi","autoComplete","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8dca000f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react'\r\n\r\nexport default class Nav extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n              <nav  className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n\r\n              <div  className=\"navbar-brand active\"> Meme</div>\r\n                  <div  className=\"navbar-nav\"><div onClick={this.props.set} className=\"nav-item\"><span style={{fontSize:\"2vw\"}} className=\"nav-link\">Home</span></div>\r\n                  <div onClick={this.props.setsave} className=\"nav-item\"><span style={{fontSize:\"2vw\"}} className=\"nav-link\" >SavedMemes</span></div>\r\n                  </div>\r\n                  <ul style={{marginLeft:\"auto\"}}  className=\"navbar-nav\">\r\n                  <li className=\"nav-item\">\r\n                   <a style={{display:\"flex\",fontSize:\"2vw\"}} className=\"nav-link \"> <i style={{padding:\"4px\"}} className=\"fa fa-user\"></i> {this.props.name.providerData[0].uid}</a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                   <a style={{display:\"flex\",fontSize:\"2vw\"}}  className=\"nav-link \" onClick={this.props.logout}> <i style={{padding:\"4px\"}} className=\"fa fa-sign-out\"></i> logout</a>\r\n                  </li>\r\n                  </ul>\r\n\r\n             \r\n\r\n                 \r\n              </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <div className=\"container\">\r\n                        Meme Generator\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../layout/Dmeme.css'\r\n\r\nexport default class Dmeme extends Component {\r\n    state={\r\n        index:0,\r\n        index1:1,\r\n        index2:2,\r\n        img:[],\r\n    }\r\n    componentDidMount(){\r\n        this.setState({img:this.props.img})\r\n       \r\n    }\r\n    next=()=>{\r\n        const {index,index1,index2}=this.state\r\n        this.setState({index:index+1,index1:index1+1,index2:index2+1})\r\n\r\n    }\r\n    prev=()=>{\r\n        const {index,index1,index2}=this.state\r\n        if(index!==0)\r\n        this.setState({index:index-1,index1:index1-1,index2:index2-1})\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{textAlign:\"center\",fontSize:\"3vw\"}}>Choose a Templete</h2>\r\n              <button className=\"btn btn-dark\" style={{float:\"left\",marginTop:\"10%\",fontSize:\"1.5vw\"}} onClick={this.prev}>prev</button>\r\n              <button style={{float:\"right\",marginTop:\"10%\",fontSize:\"1.5vw\"}} className=\"btn btn-dark\" onClick={this.next}>Next</button>\r\n                  {   this.state.img.length!==0?<div className=\"rit\">\r\n                        <div style={{width:\"50%\",}} className=\"container\">\r\n                      <img id=\"0\" src={this.state.img[this.state.index].url}  style={{width:\"100%\"}} onClick={this.props.dispatch.bind(this,this.state.img[this.state.index])} ></img> \r\n                      <img id=\"1\" src={this.state.img[this.state.index1].url}  style={{width:\"100%\"}} onClick={this.props.dispatch.bind(this,this.state.img[this.state.index1])}></img>\r\n                      <img id=\"2\" src={this.state.img[this.state.index2].url}  style={{width:\"100%\"}} onClick={this.props.dispatch.bind(this,this.state.img[this.state.index2])}></img>\r\n                      </div>\r\n                      </div>:null\r\n                  }                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport '../layout/saved.css'\r\n\r\nexport default class Saved extends Component {\r\n    state={\r\n        images:[]\r\n    }\r\n    set=(obj)=>{\r\n    this.setState({images:obj})\r\n    }\r\n    componentDidMount(){\r\n        //let images=firebase.database().ref('images/'+uid)\r\n        //images.on('value',(image)=>{\r\n       //     console.log(image)\r\n        //})\r\n        firebase.auth().onAuthStateChanged((user)=>{\r\n            if(user){\r\n                let images=firebase.database().ref('images/'+user.uid+'//')\r\n        images.on('value',(image)=>{\r\n            const img=image.val()\r\n            this.set(Object.values(img));\r\n            \r\n        })\r\n            }\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const images= this.state.images.map(a=>(\r\n            a.img\r\n        ));\r\n        const fm=images.filter((a, b) => images.indexOf(a) === b)\r\n        return (\r\n            <div>\r\n                <div className=\"cont\"> \r\n                <div className=\"container\">\r\n                {\r\n                  fm?fm.map((a)=>(\r\n                      \r\n                         <img src={a} className=\"grid-item\"></img>\r\n                     \r\n                  )):null\r\n                }\r\n                </div>\r\n                \r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Dmeme from './Dmeme';\r\nimport '../layout/meme.css';\r\nimport firebase from 'firebase';\r\nimport Saved from './Saved';\r\n\r\nexport default class Meme extends Component {\r\n    constructor(){\r\n        super();\r\n        this.dispatch.bind(this)\r\n        this.onchange.bind(this)\r\n    }\r\n    state={\r\n        img:\"\",\r\n        oldimg:\"\",\r\n        allimg:[],\r\n        text0:\"\",\r\n        text1:\"\",\r\n        text2:\"\",\r\n        text3:\"\",\r\n        text4:\"\",\r\n        i:0,\r\n    }\r\n    \r\n    componentDidMount(){\r\n        axios.get(`https://api.imgflip.com/get_memes`).then((res)=>{\r\n            this.setState({allimg:res.data.data.memes})\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    dispatch=(img)=>{\r\n        this.setState({img:img,oldimg:img,text0:\"\",text1:\"\",text2:\"\",\r\n        text3:\"\",\r\n        text4:\"\",\r\n        i:1});\r\n       \r\n        console.log(img);\r\n        if(this.state.i===1)\r\n        for(let i=0;i<this.state.oldimg.box_count;i+=1)\r\n       document.getElementsByTagName(\"input\")[i].value=\"\"\r\n\r\n    }\r\n   \r\n    onchange=(e)=>{\r\n        \r\n        this.setState({[e.target.name]:e.target.value},()=>{console.log(this.state.color)})\r\n        \r\n        \r\n        }   \r\n        onsub=()=>{\r\n            let template_id=this.state.oldimg.id\r\n            let username=\"RishabhBaid\"\r\n            let password=\"death123\"\r\n            let i=0;\r\n            const {text0,text1,text2,text3,text4,color}=this.state;\r\n            let boxes=[text0,text1,text2,text3,text4]\r\n            let box=\"\";\r\n            for(i=0;i<this.state.oldimg.box_count;i+=1){\r\n              box+=`&boxes[${i}][text]=${boxes[i]||\"\"}`\r\n            }\r\n            console.log(box)\r\n          axios.post(`https://api.imgflip.com/caption_image?template_id=${template_id}&username=${username}&password=${password}${box}`).then((val)=>{\r\n                 console.log(val.data)\r\n                 this.setState({img:val.data.data.url})\r\n             })\r\n              \r\n        }\r\n        \r\n          save(){\r\n              const {uid} =this.props;\r\n            var images=firebase.database().ref('images/'+uid);\r\n            images.push({\r\n                img:this.state.img.url||this.state.img\r\n            })\r\n        }\r\n    \r\n    render() {\r\n        let input=[];\r\n        for(let i=0;i<this.state.oldimg.box_count;i+=1){\r\n                   input.push( <div style={{display:\"inline-flex\"}}><input type=\"text\" style={{width:\"100%\"}} className=\"form-control\" name={`text${i}`} value={this.state.text} onChange={this.onchange} placeholder=\"text...\" style={{margin:\"2%\"}}></input>\r\n                   </div>)         \r\n        }\r\n       \r\n        const meme=<div>\r\n               \r\n            {\r\n                this.state.img?\r\n            <div className=\"card\" style={{width:\"40%\",margin:\"auto\"}}> \r\n                    {input} \r\n            <button className=\"btn btn-dark\" style={{margin:\"2%\",fontSize:\"1.5vw\"}} onClick={this.onsub}>Submit</button>                  \r\n            </div>:null\r\n         }\r\n             {\r\n                this.state.img?\r\n                <div className=\"meme\">\r\n                    <img src={this.state.img.url||this.state.img} style={{width:\"35vw\",marginTop:\"3%\"}}></img>\r\n                    <button style={{fontSize:\"1.5vw\"}} onClick={this.save.bind(this)} className=\"btn btn-dark\">Save</button>\r\n                 </div>   \r\n                :null\r\n            }\r\n            {\r\n               this.state.allimg.length!==0?\r\n                 <Dmeme img={this.state.allimg} dispatch={this.dispatch}/>:null \r\n            }\r\n           \r\n        </div>\r\n\r\n        return (\r\n            <div>\r\n                {this.props.saved?<Saved/>:meme}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Nav from './layout/Nav';\r\nimport Header from './layout/Header';\r\nimport './layout/login.css';\r\nimport Meme from './meme/meme';\r\nimport { Provider } from 'react-redux'\r\nimport firebase from 'firebase'\r\nimport 'firebase/auth'\r\n// import 'firebase/firestore' // <- needed if using firestore\r\n// import 'firebase/functions' // <- needed if using httpsCallable\r\nimport { createStore, combineReducers } from 'redux'\r\nimport {\r\n  ReactReduxFirebaseProvider,\r\n  firebaseReducer\r\n} from 'react-redux-firebase'\r\n// import { createFirestoreInstance, firestoreReducer } from 'redux-firestore' // <- needed if using firestore\r\n\r\nconst fbConfig = {\r\n    apiKey: \"AIzaSyCzzJpK-ziTTHgUHZltaG6gvlWdkJGbQ7Q\",\r\n    authDomain: \"socialapp-2f6b4.firebaseapp.com\",\r\n    databaseURL: \"https://socialapp-2f6b4.firebaseio.com\",\r\n    projectId: \"socialapp-2f6b4\",\r\n    storageBucket: \"socialapp-2f6b4.appspot.com\",\r\n    messagingSenderId: \"389314608979\",\r\n    appId: \"1:389314608979:web:934c3a82f60c8eabeaeba6\",\r\n    measurementId: \"G-FLSE4QJYTC\"\r\n}\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: 'users'\r\n  // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n}\r\n\r\n// Initialize firebase instance\r\nfirebase.initializeApp(fbConfig)\r\nlet database=firebase.database();\r\n\r\n// Initialize other services on firebase instance\r\n// firebase.firestore() // <- needed if using firestore\r\n// firebase.functions() // <- needed if using httpsCallable\r\n\r\n// Add firebase to reducers\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer\r\n  // firestore: firestoreReducer // <- needed if using firestore\r\n})\r\n\r\n// Create store with reducers and initial state\r\nconst initialState = {}\r\nconst store = createStore(rootReducer, initialState)\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch\r\n  // createFirestoreInstance // <- needed if using firestore\r\n}\r\n\r\n\r\nexport default class Login extends Component {\r\n    state={\r\n        signup:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        confpass:\"\",\r\n        meme:false,\r\n        user:null,\r\n        save:false,\r\n    }\r\n    log=(e)=>{\r\n\r\n        if(e.target.id===\"log\")\r\n          this.setState({signup:false})\r\n        else if(e.target.id===\"sign\")\r\n          this.setState({signup:true})\r\n        else if(e.target.id===\"back\")\r\n          this.setState({signup:null})\r\n        this.setState({email:\"\",password:\"\",confpass:\"\"})\r\n    }\r\n\r\n    login=()=>{\r\n        const {email,password}=this.state\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            email,password\r\n        ).then(()=>{\r\n            firebase.auth().onAuthStateChanged(user=>{\r\n                if(user.emailVerified)\r\n                this.setState({meme:true})\r\n                else{\r\n                    alert(\"you haven't verified your email yet\")\r\n                }\r\n                \r\n            })\r\n            \r\n        }).catch((err)=>{\r\n            alert(err.message)\r\n        })\r\n    }\r\n    logout=()=>{\r\n        firebase.auth().signOut();\r\n        this.setState({meme:false})\r\n    }\r\n    sign=(e)=>{\r\n        const {email,password,confpass}=this.state;\r\n        const auth={\r\n            email:email,\r\n            password:password\r\n        }\r\n        if(password===confpass)\r\n        firebase.auth().createUserWithEmailAndPassword(email,password).then(()=>(\r\n            firebase.auth().currentUser.sendEmailVerification().then(()=>{\r\n                alert(\"an email has been sent to email address please verify that it's you\")\r\n            }).catch(err=>{\r\n                alert(err.message)\r\n            }) ,          \r\n            firebase.auth().onAuthStateChanged((user)=>{\r\n                if(user){\r\n                    console.log(user.emailVerified)\r\n                }\r\n                else\r\n                 console.log(this.state.meme)\r\n            })\r\n        )).catch(err=>{\r\n            alert(err.message)\r\n        })  \r\n        else\r\n          alert(\"confirm password is not equal to password\")  \r\n        \r\n    }\r\n    \r\n    onchange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    meme=(u)=>{\r\n        this.setState({meme:true,user:u})\r\n    }\r\n    setmeme=()=>{\r\n        this.setState({signup:null})\r\n    }\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged((user)=>{\r\n            if (user) {\r\n              if(user.emailVerified)\r\n              this.meme(user);\r\n            } \r\n            else{\r\n                this.setmeme();\r\n            }\r\n          });     \r\n    }\r\n    show=(e)=>{\r\n     if(e.target.className===\"fa fa-eye\"){\r\n         e.target.className=\"fa fa-eye-slash\"\r\n         document.getElementById(\"pass\").type=\"text\"\r\n     }\r\n     else{\r\n        e.target.className=\"fa fa-eye\"   \r\n        document.getElementById(\"pass\").type=\"password\"\r\n     }\r\n    }\r\n    setsave=()=>{\r\n        this.setState({save:true})\r\n       \r\n    }\r\n    sethome=()=>{\r\n        this.setState({save:false})\r\n    }\r\n    render() {\r\n        \r\n        const logi=(<div>\r\n        {\r\n            this.state.signup===null?null:<i id=\"back\" onClick={this.log} className=\"fa fa-arrow-left fa-1x\"></i>\r\n        }\r\n        <div className=\"card\" style={{width:\"40%\",margin:\"auto\",marginTop:\"10%\",padding:\"1%\"}}>\r\n            {this.state.signup===true?<div><input type=\"email\" name=\"email\" style={{width:\"96%\"}} onChange={this.onchange} className=\"form-control\" placeholder=\"email...\"></input>\r\n            <div style={{display:\"flex\",}}><input id=\"pass\" type=\"password\" name=\"password\"  className=\"form-control\" style={{marginTop:\"2%\"}} onChange={this.onchange} autoComplete=\"off\" placeholder=\"password...\"></input><i id=\"ey\" style={{marginTop:\"4%\"}} onClick={this.show} className=\"fa fa-eye\"></i></div>\r\n            <input type=\"password\" name=\"confpass\"  className=\"form-control\" style={{width:\"96%\",marginTop:\"2%\"}} onChange={this.onchange} placeholder=\"confirm password...\"></input>\r\n            <button id=\"sign\" className=\"btn btn-dark form-control\" style={{marginTop:\"2%\"}} onClick={this.sign}>Signup</button>\r\n            </div>:null\r\n            }\r\n             {this.state.signup===false?<div><input type=\"email\" style={{width:\"96%\"}} name=\"email\" value={this.state.email} className=\"form-control\" onChange={this.onchange} placeholder=\"email...\" ></input>\r\n             <div style={{display:\"flex\",}}><input type=\"password\" id=\"pass\" value={this.state.password} name=\"password\" className=\"form-control\" autoComplete=\"off\" onChange={this.onchange} style={{marginTop:\"2%\"}} placeholder=\"password...\"></input><i id=\"ey\" style={{marginTop:\"4%\"}} onClick={this.show} className=\"fa fa-eye\"></i></div>\r\n            <button id=\"log\" className=\"btn btn-dark form-control\" style={{marginTop:\"2%\"}} onClick={this.login}>Login</button>\r\n           </div>:null\r\n            }           \r\n            {\r\n                this.state.signup===null?\r\n                <div>\r\n                    <button id=\"log\" className=\"btn btn-dark form-control\" style={{marginTop:\"2%\"}} onClick={this.log}>Login</button>\r\n                    <button id=\"sign\" className=\"btn btn-dark form-control\" style={{marginTop:\"2%\"}} onClick={this.log}>Signup</button>\r\n                </div>\r\n                :null\r\n            }\r\n            \r\n            \r\n        </div>\r\n    </div>)\r\n        return (\r\n            <Provider store={store}>\r\n                <ReactReduxFirebaseProvider {...rrfProps}>\r\n                  \r\n                   \r\n                    {\r\n                        this.state.meme? <div><Nav set={this.sethome} setsave={this.setsave} name={firebase.auth().currentUser} logout={this.logout}/>\r\n                        <Header/>\r\n                        <Meme saved={this.state.save} uid={this.state.user.uid||null}/></div>:logi\r\n                    }                   \r\n                \r\n                </ReactReduxFirebaseProvider>\r\n            </Provider>\r\n           \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Login from './login';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Login />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}