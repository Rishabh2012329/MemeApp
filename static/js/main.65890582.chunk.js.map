{"version":3,"sources":["serviceWorker.js","layout/Nav.js","layout/Header.js","meme/Dmeme.js","meme/Imav.js","meme/Saved.js","meme/meme.js","login.js","index.js"],"names":["Boolean","window","location","hostname","match","Nav","style","alignItems","className","onClick","this","props","set","setsave","right","position","padding","name","providerData","uid","marginLeft","logout","Component","Header","Dmeme","state","index","index1","index2","img","next","setState","prev","textAlign","fontSize","float","marginTop","left","length","width","id","src","url","dispatch","bind","Imav","back","imgs","useState","setindex","url1","seturl","class","display","justifyContent","aria-hidden","height","Saved","images","imageview","obj","setim","e","firebase","auth","onAuthStateChanged","user","database","ref","on","image","val","Object","values","target","map","a","fm","filter","b","indexOf","seti","Meme","oldimg","allimg","text0","text1","text2","text3","text4","i","console","log","box_count","document","getElementsByTagName","value","onchange","color","onsub","template_id","boxes","box","axios","post","then","data","get","res","memes","catch","err","push","input","type","text","onChange","placeholder","margin","meme","save","saved","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","rootReducer","combineReducers","firebaseReducer","store","createStore","rrfProps","config","userProfile","Login","signup","email","password","confpass","login","signInWithEmailAndPassword","emailVerified","alert","message","signOut","sign","createUserWithEmailAndPassword","currentUser","sendEmailVerification","u","setmeme","show","getElementById","sethome","logi","autoComplete","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.65890582.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react'\r\nimport './nav.css'\r\n\r\nexport default class Nav extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n              <nav style={{alignItems:\"center\"}} className=\"navb\">\r\n              <div  className=\"brand\"> <span>Meme</span></div>\r\n                  <div  className=\"nav1\"><div onClick={this.props.set} className=\"navi\">Home</div>\r\n                  <div onClick={this.props.setsave} className=\"navi\">SavedMemes</div>\r\n                  </div>\r\n                  \r\n                  <div style={{right:\"2vw\",position:\"absolute\"}} className=\"nav2\">\r\n                  <div className=\"navi\">\r\n                   <a  className=\"navl \"> <i style={{padding:\"4px\"}} className=\"fa fa-user\"></i> {this.props.name.providerData[0].uid}</a>\r\n                  </div>\r\n                  <div style={{marginLeft:\"2%\"}} className=\"navi\">\r\n                   <a   className=\"navl \" onClick={this.props.logout}> <i style={{padding:\"4px\"}} className=\"fa fa-sign-out\"></i> logout</a>\r\n                  </div>\r\n                  </div>\r\n                 \r\n              </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <div className=\"container\">\r\n                        Meme Generator\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../layout/Dmeme.css'\r\n\r\nexport default class Dmeme extends Component {\r\n    state={\r\n        index:0,\r\n        index1:1,\r\n        index2:2,\r\n        img:[],\r\n    }\r\n    componentDidMount(){\r\n        this.setState({img:this.props.img})\r\n       \r\n    }\r\n    next=()=>{\r\n        const {index,index1,index2}=this.state\r\n        this.setState({index:index+1,index1:index1+1,index2:index2+1})\r\n\r\n    }\r\n    prev=()=>{\r\n        const {index,index1,index2}=this.state\r\n        if(index!==0)\r\n        this.setState({index:index-1,index1:index1-1,index2:index2-1})\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{textAlign:\"center\",fontSize:\"3vw\"}}>Choose a Templete</h2>\r\n              <i className=\"fa fa-chevron-circle-left fa-2x \" style={{float:\"left\",marginTop:\"10%\",left:\"10%\",position:\"absolute\"}} onClick={this.prev}></i>\r\n              <i style={{float:\"right\",marginTop:\"10%\",right:\"10%\",position:\"absolute\"}} className=\"fa fa-chevron-circle-right fa-2x \" onClick={this.next}></i>\r\n                  {   this.state.img.length!==0?<div className=\"rit\">\r\n                        <div style={{width:\"50%\",}} className=\"container\">\r\n                      <img id=\"0\" src={this.state.img[this.state.index].url}  style={{width:\"100%\"}} onClick={this.props.dispatch.bind(this,this.state.img[this.state.index])} ></img> \r\n                      <img id=\"1\" src={this.state.img[this.state.index1].url}  style={{width:\"100%\"}} onClick={this.props.dispatch.bind(this,this.state.img[this.state.index1])}></img>\r\n                      <img id=\"2\" src={this.state.img[this.state.index2].url}  style={{width:\"100%\"}} onClick={this.props.dispatch.bind(this,this.state.img[this.state.index2])}></img>\r\n                      </div>\r\n                      </div>:null\r\n                  }                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{useState} from 'react'\r\nimport '../layout/imav.css'\r\n\r\nexport default function Imav({url,back,imgs}){\r\n    \r\n    const [index,setindex]=useState(0);\r\n    const [url1,seturl]=useState(url)\r\n    const change=()=>{\r\n        if(index+1<imgs.length){\r\n            setindex(index+1)\r\n            seturl(imgs[index])\r\n        }\r\n        if(index==imgs.length-1){\r\n            setindex(0)\r\n            seturl(imgs[index])\r\n        }\r\n    }\r\n    const changeR=()=>{\r\n        if(0<index){\r\n            setindex(index-1)\r\n            seturl(imgs[index])\r\n        }\r\n        if(index==0){\r\n            setindex(imgs.length-1)\r\n            seturl(imgs[index])\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <div><i onClick={back} class=\"fa fa-arrow-left fa-2x\"></i></div>\r\n        <div style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",padding:\"10%\"}}>\r\n        <i style={{left:\"1%\",position:\"absolute\"}} onClick={change} class=\"fa fa-chevron-circle-left fa-2x\" aria-hidden=\"true\"></i>\r\n        <i style={{right:\"1%\",position:\"absolute\"}} onClick={changeR} class=\"fa fa-chevron-circle-right fa-2x\" aria-hidden=\"true\"></i>\r\n            <img src={url1} style={{width:\"100%\",height:\"auto\"}}></img >\r\n        </div>\r\n    </div>\r\n        \r\n    )\r\n}","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport '../layout/saved.css';\r\nimport Imav from './Imav'\r\n\r\nexport default class Saved extends Component {\r\n    state={\r\n        images:[],\r\n        imageview:false,\r\n        url:''\r\n    }\r\n    set=(obj)=>{\r\n    this.setState({images:obj})\r\n    }\r\n    componentDidMount(){\r\n        //let images=firebase.database().ref('images/'+uid)\r\n        //images.on('value',(image)=>{\r\n       //     console.log(image)\r\n        //})\r\n        firebase.auth().onAuthStateChanged((user)=>{\r\n            if(user){\r\n                let images=firebase.database().ref('images/'+user.uid+'//')\r\n           images.on('value',(image)=>{\r\n            const img=image.val()\r\n            this.set(Object.values(img));\r\n            \r\n        })\r\n            }\r\n        })\r\n\r\n    }\r\n    seti(e){\r\n        this.setState({imageview:true,url:e.target.src})\r\n    }\r\n    setim=(e)=>{\r\n        this.setState({imageview:false})\r\n    }\r\n    render() {\r\n        const images= this.state.images.map(a=>(\r\n            a.img\r\n        ));\r\n        const fm=images.filter((a, b) => images.indexOf(a) === b)\r\n        const Saved=<div>\r\n            <div className=\"cont\"> \r\n            <div className=\"container\">\r\n            {\r\n              fm?fm.map((a)=>(\r\n                  \r\n                     <img src={a} onClick={this.seti.bind(this)} className=\"grid-item\"></img>\r\n                 \r\n              )):null\r\n            }\r\n            </div>\r\n            \r\n             </div>\r\n        </div>\r\n        return (\r\n           <div>\r\n               {this.state.imageview?<Imav back={this.setim} url={this.state.url} imgs={images}/>:Saved}\r\n           </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Dmeme from './Dmeme';\r\nimport '../layout/meme.css';\r\nimport firebase from 'firebase';\r\nimport Saved from './Saved';\r\n\r\nexport default class Meme extends Component {\r\n    constructor(){\r\n        super();\r\n        this.dispatch.bind(this)\r\n        this.onchange.bind(this)\r\n    }\r\n    state={\r\n        img:\"\",\r\n        oldimg:\"\",\r\n        allimg:[],\r\n        text0:\"\",\r\n        text1:\"\",\r\n        text2:\"\",\r\n        text3:\"\",\r\n        text4:\"\",\r\n        i:0,\r\n    }\r\n    \r\n    componentDidMount(){\r\n        axios.get(`https://api.imgflip.com/get_memes`).then((res)=>{\r\n            this.setState({allimg:res.data.data.memes})\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    dispatch=(img)=>{\r\n        this.setState({img:img,oldimg:img,text0:\"\",text1:\"\",text2:\"\",\r\n        text3:\"\",\r\n        text4:\"\",\r\n        i:1});\r\n       \r\n        console.log(img);\r\n        if(this.state.i===1)\r\n        for(let i=0;i<this.state.oldimg.box_count;i+=1)\r\n       document.getElementsByTagName(\"input\")[i].value=\"\"\r\n\r\n    }\r\n   \r\n    onchange=(e)=>{\r\n        \r\n        this.setState({[e.target.name]:e.target.value},()=>{console.log(this.state.color)})\r\n        \r\n        \r\n        }   \r\n        onsub=()=>{\r\n            let template_id=this.state.oldimg.id\r\n            let username=\"RishabhBaid\"\r\n            let password=\"death123\"\r\n            let i=0;\r\n            const {text0,text1,text2,text3,text4,color}=this.state;\r\n            let boxes=[text0,text1,text2,text3,text4]\r\n            let box=\"\";\r\n            for(i=0;i<this.state.oldimg.box_count;i+=1){\r\n              box+=`&boxes[${i}][text]=${boxes[i]||\"\"}`\r\n            }\r\n            console.log(box)\r\n          axios.post(`https://api.imgflip.com/caption_image?template_id=${template_id}&username=${username}&password=${password}${box}`).then((val)=>{\r\n                 console.log(val.data)\r\n                 this.setState({img:val.data.data.url})\r\n             })\r\n              \r\n        }\r\n        \r\n          save(){\r\n              const {uid} =this.props;\r\n            var images=firebase.database().ref('images/'+uid);\r\n            images.push({\r\n                img:this.state.img.url||this.state.img\r\n            })\r\n        }\r\n    \r\n    render() {\r\n        let input=[];\r\n        for(let i=0;i<this.state.oldimg.box_count;i+=1){\r\n                   input.push( <div style={{display:\"inline-flex\"}}><input type=\"text\" style={{width:\"100%\"}} className=\"form-control\" name={`text${i}`} value={this.state.text} onChange={this.onchange} placeholder=\"text...\" style={{margin:\"2%\"}}></input>\r\n                   </div>)         \r\n        }\r\n       \r\n        const meme=<div>\r\n               \r\n            {\r\n                this.state.img?\r\n            <div className=\"card\" style={{width:\"40%\",margin:\"auto\"}}> \r\n                    {input} \r\n            <button className=\"btn btn-dark\" style={{margin:\"2%\",fontSize:\"1.5vw\"}} onClick={this.onsub}>Submit</button>                  \r\n            </div>:null\r\n         }\r\n             {\r\n                this.state.img?\r\n                <div className=\"meme\">\r\n                    <img src={this.state.img.url||this.state.img} style={{width:\"50%\",marginTop:\"3%\"}}></img>\r\n                    <button style={{fontSize:\"1.5vw\"}} onClick={this.save.bind(this)} className=\"btn btn-dark\">Save</button>\r\n                 </div>   \r\n                :null\r\n            }\r\n            {\r\n               this.state.allimg.length!==0?\r\n                 <Dmeme img={this.state.allimg} dispatch={this.dispatch}/>:null \r\n            }\r\n           \r\n        </div>\r\n\r\n        return (\r\n            <div>\r\n                {this.props.saved?<Saved/>:meme}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Nav from './layout/Nav';\r\nimport Header from './layout/Header';\r\nimport './layout/login.css';\r\nimport Meme from './meme/meme';\r\nimport { Provider } from 'react-redux'\r\nimport firebase from 'firebase'\r\nimport 'firebase/auth'\r\n// import 'firebase/firestore' // <- needed if using firestore\r\n// import 'firebase/functions' // <- needed if using httpsCallable\r\nimport { createStore, combineReducers } from 'redux'\r\nimport {\r\n  ReactReduxFirebaseProvider,\r\n  firebaseReducer\r\n} from 'react-redux-firebase'\r\n// import { createFirestoreInstance, firestoreReducer } from 'redux-firestore' // <- needed if using firestore\r\n\r\nconst fbConfig = {\r\n    apiKey: \"AIzaSyCzzJpK-ziTTHgUHZltaG6gvlWdkJGbQ7Q\",\r\n    authDomain: \"socialapp-2f6b4.firebaseapp.com\",\r\n    databaseURL: \"https://socialapp-2f6b4.firebaseio.com\",\r\n    projectId: \"socialapp-2f6b4\",\r\n    storageBucket: \"socialapp-2f6b4.appspot.com\",\r\n    messagingSenderId: \"389314608979\",\r\n    appId: \"1:389314608979:web:934c3a82f60c8eabeaeba6\",\r\n    measurementId: \"G-FLSE4QJYTC\"\r\n}\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: 'users'\r\n  // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n}\r\n\r\n// Initialize firebase instance\r\nfirebase.initializeApp(fbConfig)\r\nlet database=firebase.database();\r\n\r\n// Initialize other services on firebase instance\r\n// firebase.firestore() // <- needed if using firestore\r\n// firebase.functions() // <- needed if using httpsCallable\r\n\r\n// Add firebase to reducers\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer\r\n  // firestore: firestoreReducer // <- needed if using firestore\r\n})\r\n\r\n// Create store with reducers and initial state\r\nconst initialState = {}\r\nconst store = createStore(rootReducer, initialState)\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch\r\n  // createFirestoreInstance // <- needed if using firestore\r\n}\r\n\r\n\r\nexport default class Login extends Component {\r\n    state={\r\n        signup:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        confpass:\"\",\r\n        meme:false,\r\n        user:null,\r\n        save:false,\r\n    }\r\n    log=(e)=>{\r\n\r\n        if(e.target.id===\"log\")\r\n          this.setState({signup:false})\r\n        else if(e.target.id===\"sign\")\r\n          this.setState({signup:true})\r\n        else if(e.target.id===\"back\")\r\n          this.setState({signup:null})\r\n        this.setState({email:\"\",password:\"\",confpass:\"\"})\r\n    }\r\n\r\n    login=()=>{\r\n        const {email,password}=this.state\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            email,password\r\n        ).then(()=>{\r\n            firebase.auth().onAuthStateChanged(user=>{\r\n                if(user.emailVerified)\r\n                this.setState({meme:true})\r\n                else{\r\n                    alert(\"you haven't verified your email yet\")\r\n                }\r\n                \r\n            })\r\n            \r\n        }).catch((err)=>{\r\n            alert(err.message)\r\n        })\r\n    }\r\n    logout=()=>{\r\n        firebase.auth().signOut();\r\n        this.setState({meme:false})\r\n    }\r\n    sign=(e)=>{\r\n        const {email,password,confpass}=this.state;\r\n        const auth={\r\n            email:email,\r\n            password:password\r\n        }\r\n        if(password===confpass)\r\n        firebase.auth().createUserWithEmailAndPassword(email,password).then(()=>(\r\n            firebase.auth().currentUser.sendEmailVerification().then(()=>{\r\n                alert(\"an email has been sent to email address please verify that it's you\")\r\n            }).catch(err=>{\r\n                alert(err.message)\r\n            }) ,          \r\n            firebase.auth().onAuthStateChanged((user)=>{\r\n                if(user){\r\n                    console.log(user.emailVerified)\r\n                }\r\n                else\r\n                 console.log(this.state.meme)\r\n            })\r\n        )).catch(err=>{\r\n            alert(err.message)\r\n        })  \r\n        else\r\n          alert(\"confirm password is not equal to password\")  \r\n        \r\n    }\r\n    \r\n    onchange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    meme=(u)=>{\r\n        this.setState({meme:true,user:u})\r\n    }\r\n    setmeme=()=>{\r\n        this.setState({signup:null})\r\n    }\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged((user)=>{\r\n            if (user) {\r\n              if(user.emailVerified)\r\n              this.meme(user);\r\n            } \r\n            else{\r\n                this.setmeme();\r\n            }\r\n          });     \r\n    }\r\n    show=(e)=>{\r\n     if(e.target.className===\"fa fa-eye\"){\r\n         e.target.className=\"fa fa-eye-slash\"\r\n         document.getElementById(\"pass\").type=\"text\"\r\n     }\r\n     else{\r\n        e.target.className=\"fa fa-eye\"   \r\n        document.getElementById(\"pass\").type=\"password\"\r\n     }\r\n    }\r\n    setsave=()=>{\r\n        this.setState({save:true})\r\n       \r\n    }\r\n    sethome=()=>{\r\n        this.setState({save:false})\r\n    }\r\n    render() {\r\n        \r\n        const logi=(<div>{\r\n            this.state.signup!==\"\"?<div>\r\n        {\r\n            this.state.signup===null?null:<i id=\"back\" onClick={this.log} className=\"fa fa-arrow-left fa-1x\"></i>\r\n        }\r\n        <div className=\"card\" style={{width:\"40%\",margin:\"auto\",marginTop:\"10%\",padding:\"1%\"}}>\r\n            {this.state.signup===true?<div><input type=\"email\" name=\"email\" style={{width:\"96%\"}} onChange={this.onchange} className=\"form-control\" placeholder=\"email...\"></input>\r\n            <div style={{display:\"flex\",alignItems:\"center\"}}><input id=\"pass\" type=\"password\" name=\"password\"  className=\"form-control\" style={{marginTop:\"2%\"}} onChange={this.onchange} autoComplete=\"off\" placeholder=\"password...\"></input><i id=\"ey\" onClick={this.show} className=\"fa fa-eye\"></i></div>\r\n            <input type=\"password\" name=\"confpass\"  className=\"form-control\" style={{width:\"96%\",marginTop:\"2%\"}} onChange={this.onchange} placeholder=\"confirm password...\"></input>\r\n            <button id=\"sign\" className=\"btn btn-dark form-control\" style={{marginTop:\"2%\"}} onClick={this.sign}>Signup</button>\r\n            </div>:null\r\n            }\r\n             {this.state.signup===false?<div><input type=\"email\" style={{width:\"96%\"}} name=\"email\" value={this.state.email} className=\"form-control\" onChange={this.onchange} placeholder=\"email...\" ></input>\r\n             <div style={{display:\"flex\",}}><input type=\"password\" id=\"pass\" value={this.state.password} name=\"password\" className=\"form-control\" autoComplete=\"off\" onChange={this.onchange} style={{marginTop:\"2%\"}} placeholder=\"password...\"></input><i id=\"ey\" style={{marginTop:\"4%\"}} onClick={this.show} className=\"fa fa-eye\"></i></div>\r\n            <button id=\"log\" className=\"btn btn-dark form-control\" style={{marginTop:\"2%\"}} onClick={this.login}>Login</button>\r\n           </div>:null\r\n            }           \r\n            {\r\n                this.state.signup===null?\r\n                <div>\r\n                    <button id=\"log\" className=\"btn btn-dark form-control\" style={{marginTop:\"2%\"}} onClick={this.log}>Login</button>\r\n                    <button id=\"sign\" className=\"btn btn-dark form-control\" style={{marginTop:\"2%\"}} onClick={this.log}>Signup</button>\r\n                </div>\r\n                :null\r\n            }\r\n        </div></div>:null\r\n    }\r\n    </div>)\r\n        return (\r\n            <Provider store={store}>\r\n                <ReactReduxFirebaseProvider {...rrfProps}>\r\n                  \r\n                   \r\n                    {\r\n                        this.state.meme? <div><Nav set={this.sethome} setsave={this.setsave} name={firebase.auth().currentUser} logout={this.logout}/>\r\n                        <Header/>\r\n                        <Meme saved={this.state.save} uid={this.state.user.uid||null}/></div>:logi\r\n                    }                   \r\n                \r\n                </ReactReduxFirebaseProvider>\r\n            </Provider>\r\n           \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Login from './login';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Login />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}